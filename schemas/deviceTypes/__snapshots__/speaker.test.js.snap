// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`models/speaker should export the commands 1`] = `
Object {
  "properties": Object {
    "addSpotifyToQueueBottom": Object {
      "description": "Adds a spotify track to the bottom of the queue",
      "friendly": "Add spotify track to bottom of queue",
      "requestSchema": Object {
        "properties": Object {
          "uri": Object {
            "type": "string",
          },
        },
        "required": Array [
          "uri",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "addSpotifyToQueueNext": Object {
      "description": "Adds spotify track to the top of the queue so that it plays next",
      "friendly": "Add spotify track to top of queue",
      "requestSchema": Object {
        "properties": Object {
          "uri": Object {
            "type": "string",
          },
        },
        "required": Array [
          "uri",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "addUrlToQueueBottom": Object {
      "description": "Adds audio to the bottom of the queue",
      "friendly": "Add track to bottom of queue",
      "requestSchema": Object {
        "properties": Object {
          "uri": Object {
            "type": "string",
          },
        },
        "required": Array [
          "uri",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "addUrlToQueueNext": Object {
      "description": "Adds audio to the top of the queue so that it plays next",
      "friendly": "Add track to top of queue",
      "requestSchema": Object {
        "properties": Object {
          "uri": Object {
            "type": "string",
          },
        },
        "required": Array [
          "uri",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "flushQueue": Object {
      "description": "Empties the queue on the speaker",
      "friendly": "Flush the queue",
      "type": "boolean",
    },
    "getCurrentTrack": Object {
      "description": "Gets the current track from the speaker",
      "friendly": "Get current track",
      "type": "boolean",
    },
    "getLEDState": Object {
      "description": "Gets the state of the LED on the speaker",
      "friendly": "Get the LED state",
      "type": "boolean",
    },
    "getMuted": Object {
      "description": "Gets whether the speaker is muted or not",
      "friendly": "Get muted",
      "type": "boolean",
    },
    "getVolume": Object {
      "description": "Gets the volume level of the speaker",
      "friendly": "Get volume",
      "type": "boolean",
    },
    "next": Object {
      "description": "Plays the next track in the queue",
      "friendly": "Play next track",
      "type": "boolean",
    },
    "pause": Object {
      "description": "Pauses the currently playing audio",
      "friendly": "Pause audio",
      "type": "boolean",
    },
    "play": Object {
      "description": "Plays the current audio",
      "friendly": "Play audio",
      "type": "boolean",
    },
    "previous": Object {
      "description": "Plays the previous track in the queue",
      "friendly": "Play previous track",
      "type": "boolean",
    },
    "seek": Object {
      "description": "Seeks to the specified position within the current audio",
      "friendly": "Jump to position within track",
      "requestSchema": Object {
        "properties": Object {
          "position": Object {
            "minimum": 0,
            "type": "integer",
          },
        },
        "required": Array [
          "position",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "setLEDState": Object {
      "description": "Sets the state of the LED on the speaker",
      "friendly": "Turn LED on",
      "requestSchema": Object {
        "properties": Object {
          "on": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "on",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "setMuted": Object {
      "description": "Sets whether the speaker is muted or not",
      "friendly": "Mute",
      "requestSchema": Object {
        "properties": Object {
          "muted": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "muted",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "setName": Object {
      "description": "Sets the name of the speaker",
      "friendly": "Set the name of the speaker",
      "requestSchema": Object {
        "properties": Object {
          "name": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "setPlayMode": Object {
      "description": "Sets the play mode of the speaker",
      "friendly": "Set play mode",
      "requestSchema": Object {
        "properties": Object {
          "playMode": Object {
            "enum": Array [
              "normal",
              "repeat_all",
              "shuffle",
              "shuffle_norepeat",
            ],
            "type": "string",
          },
        },
        "required": Array [
          "playMode",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "setVolume": Object {
      "description": "Sets the volume of the speaker",
      "friendly": "Set volume",
      "requestSchema": Object {
        "properties": Object {
          "volume": Object {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
          },
        },
        "required": Array [
          "volume",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "stop": Object {
      "description": "Stops the currently playing audio",
      "friendly": "Stop the audio",
      "type": "boolean",
    },
  },
  "type": "object",
}
`;

exports[`models/speaker should export the events 1`] = `
Object {
  "properties": Object {
    "ADDED_TO_QUEUE_BOTTOM": Object {
      "constant": "ADDED_TO_QUEUE_BOTTOM",
      "description": "Fired when an item is added to the bottom of the queue",
      "friendly": "Added to bottom of queue",
      "responseSchema": Object {
        "properties": Object {
          "uri": Object {
            "type": "string",
          },
        },
        "required": Array [
          "queued",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "ADDED_TO_QUEUE_NEXT": Object {
      "constant": "ADDED_TO_QUEUE_NEXT",
      "description": "Fired when an item is added to the top of the queue",
      "friendly": "Added to top of queue",
      "responseSchema": Object {
        "properties": Object {
          "uri": Object {
            "type": "string",
          },
        },
        "required": Array [
          "queued",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "AUDIO_PLAYING_STATE": Object {
      "constant": "AUDIO_PLAYING_STATE",
      "description": "Represents the current playing state (playing, paused, stopped)",
      "friendly": "Playing state",
      "responseSchema": Object {
        "properties": Object {
          "paused": Object {
            "paused": "boolean",
          },
          "playing": Object {
            "paused": "boolean",
          },
          "stopped": Object {
            "paused": "boolean",
          },
        },
        "required": Array [
          "paused",
          "playing",
          "stopped",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "CURRENT_AUDIO_TRACK": Object {
      "constant": "CURRENT_AUDIO_TRACK",
      "description": "Information about the current audio",
      "friendly": "Current track",
      "responseSchema": Object {
        "properties": Object {
          "album": Object {
            "type": "string",
          },
          "artUrl": Object {
            "type": "string",
          },
          "artist": Object {
            "type": "string",
          },
          "currentPosition": Object {
            "type": "integer",
          },
          "length": Object {
            "type": "integer",
          },
          "track": Object {
            "type": "string",
          },
        },
        "required": Array [
          "artist",
          "track",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "LED_STATE": Object {
      "constant": "LED_STATE",
      "description": "The current state of the LED",
      "friendly": "LED",
      "responseSchema": Object {
        "properties": Object {
          "on": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "on",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "MUTED_AUDIO": Object {
      "constant": "MUTED_AUDIO",
      "description": "Whether the audio is muted or not",
      "friendly": "Muted",
      "responseSchema": Object {
        "properties": Object {
          "muted": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "muted",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "NAME": Object {
      "constant": "NAME",
      "description": "The current name of the device",
      "friendly": "Name",
      "responseSchema": Object {
        "properties": Object {
          "name": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "NEXT_AUDIO_TRACK": Object {
      "constant": "NEXT_AUDIO_TRACK",
      "description": "Fired when changing to the next audio track",
      "friendly": "Next audio track",
      "responseSchema": Object {
        "properties": Object {
          "next": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "next",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "PREVIOUS_AUDIO_TRACK": Object {
      "constant": "PREVIOUS_AUDIO_TRACK",
      "description": "Fired when changing to the previous audio track",
      "friendly": "Previous audio track",
      "responseSchema": Object {
        "properties": Object {
          "previous": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "previous",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "QUEUE_FLUSHED": Object {
      "constant": "QUEUE_FLUSHED",
      "description": "Fired when the queue has been emptied",
      "friendly": "Queue flushed",
      "responseSchema": Object {
        "properties": Object {
          "queueFlushed": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "queueFlushed",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "SEEK": Object {
      "constant": "SEEK",
      "description": "Represents the current position",
      "friendly": "Current position",
      "responseSchema": Object {
        "properties": Object {
          "position": Object {
            "minimum": 0,
            "type": "integer",
          },
        },
        "required": Array [
          "position",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
    "VOLUME": Object {
      "constant": "VOLUME",
      "description": "The current volume level",
      "friendly": "Volume level",
      "responseSchema": Object {
        "properties": Object {
          "volume": Object {
            "maxiumum": 100,
            "minimum": 0,
            "type": "integer",
          },
        },
        "required": Array [
          "volume",
        ],
        "type": "object",
      },
      "type": "boolean",
    },
  },
  "type": "object",
}
`;
