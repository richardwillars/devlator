// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`models/index should export the list of models 1`] = `
Object {
  "authenticationSchemas": Object {
    "requested": Object {
      "ManualAction": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "message": Object {
            "type": "string",
          },
          "type": Object {
            "type": "string",
          },
        },
        "required": Array [
          "type",
          "message",
        ],
        "type": "object",
      },
      "RequestData": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "button": Object {
            "properties": Object {
              "label": Object {
                "type": "string",
              },
              "url": Object {
                "type": "string",
              },
            },
            "required": Array [
              "url",
              "label",
            ],
            "type": "object",
          },
          "dataLabel": Object {
            "type": "string",
          },
          "message": Object {
            "type": "string",
          },
          "type": Object {
            "type": "string",
          },
        },
        "required": Array [
          "type",
          "message",
          "dataLabel",
        ],
        "type": "object",
      },
    },
    "returned": Object {
      "ManualAction": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "message": Object {
            "type": "string",
          },
          "success": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "success",
        ],
        "type": "object",
      },
      "RequestData": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "data": Object {
            "type": "string",
          },
        },
        "required": Array [
          "data",
        ],
        "type": "object",
      },
    },
  },
  "device": Object {
    "model": undefined,
    "schema": Object {
      "_id": Object {
        "required": true,
        "type": [Function],
        "unique": true,
      },
      "created": Object {
        "default": [Function],
        "required": false,
        "type": [Function],
      },
      "driver": Object {
        "required": true,
        "type": [Function],
      },
      "specs": Object {
        "default": Object {},
        "required": true,
        "type": [Function],
      },
      "type": Object {
        "required": true,
        "type": [Function],
      },
    },
  },
  "driver": Object {
    "model": undefined,
    "schema": Object {
      "_id": Object {
        "required": true,
        "type": [Function],
        "unique": true,
      },
      "settings": Object {
        "default": Object {},
        "required": true,
        "type": [Function],
      },
    },
  },
  "event": Object {
    "model": undefined,
    "schema": Object {
      "deviceId": Object {
        "required": true,
        "type": [Function],
      },
      "driverId": Object {
        "required": true,
        "type": [Function],
      },
      "driverType": Object {
        "required": true,
        "type": [Function],
      },
      "event": Object {
        "required": true,
        "type": [Function],
      },
      "eventType": Object {
        "enum": Array [
          "request",
          "device",
        ],
        "required": true,
        "type": [Function],
      },
      "value": Object {
        "default": Object {},
        "required": false,
        "type": [Function],
      },
      "when": Object {
        "default": [Function],
        "required": false,
        "type": [Function],
      },
    },
  },
  "events": Object {
    "ADDED_TO_QUEUE_BOTTOM": Object {
      "description": "Fired when an item is added to the bottom of the queue",
      "friendly": "Added to bottom of queue",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "uri": Object {
            "type": "string",
          },
        },
        "required": Array [
          "queued",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "ADDED_TO_QUEUE_NEXT": Object {
      "description": "Fired when an item is added to the top of the queue",
      "friendly": "Added to top of queue",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "uri": Object {
            "type": "string",
          },
        },
        "required": Array [
          "queued",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "AUDIO_PLAYING_STATE": Object {
      "description": "Represents the current playing state (playing, paused, stopped)",
      "friendly": "Playing state",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "paused": Object {
            "paused": "boolean",
          },
          "playing": Object {
            "paused": "boolean",
          },
          "stopped": Object {
            "paused": "boolean",
          },
        },
        "required": Array [
          "paused",
          "playing",
          "stopped",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "BATTERY_LEVEL": Object {
      "description": "The current battery level of the device",
      "friendly": "Battery level",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "level": Object {
            "maxiumum": 100,
            "minimum": 0,
            "type": "double",
          },
        },
        "required": Array [
          "level",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "BREATHE_LIGHT_EFFECT": Object {
      "description": "Whether the light is running a breathe effect or not",
      "friendly": "Breathe effect",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "breatheEffect": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "breatheEffect",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "CONTACT": Object {
      "description": "Whether the contact sensor is closed or open",
      "friendly": "Contact",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "contact": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "contact",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "CURRENT_AUDIO_TRACK": Object {
      "description": "Information about the current audio",
      "friendly": "Current track",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "album": Object {
            "type": "string",
          },
          "artUrl": Object {
            "type": "string",
          },
          "artist": Object {
            "type": "string",
          },
          "currentPosition": Object {
            "type": "integer",
          },
          "length": Object {
            "type": "integer",
          },
          "track": Object {
            "type": "string",
          },
        },
        "required": Array [
          "artist",
          "track",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "ENERGY": Object {
      "description": "The current energy level in watts",
      "friendly": "Energy",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "energy": Object {
            "type": "double",
          },
        },
        "required": Array [
          "energy",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "HUMIDITY": Object {
      "description": "The current humidity level",
      "friendly": "Humidity",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "level": Object {
            "maxiumum": 100,
            "minimum": 0,
            "type": "double",
          },
        },
        "required": Array [
          "level",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "LED_STATE": Object {
      "description": "The current state of the LED",
      "friendly": "LED",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "on": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "on",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "LIGHT": Object {
      "description": "The current light level in lux",
      "friendly": "Light level",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "level": Object {
            "maxiumum": 30000,
            "minimum": 0,
            "type": "double",
          },
        },
        "required": Array [
          "level",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "LIGHT_STATE": Object {
      "description": "The current state of the light (hue, saturation, brightness etc)",
      "friendly": "Light state",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "colour": Object {
            "properties": Object {
              "brightness": Object {
                "maximum": 1,
                "minimum": 0,
                "type": "double",
              },
              "hue": Object {
                "maxiumum": 360,
                "minimum": 0,
                "type": "integer",
              },
              "saturation": Object {
                "maximum": 1,
                "minimum": 0,
                "type": "double",
              },
            },
            "type": "object",
          },
          "on": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "colour",
          "on",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "MOTION": Object {
      "description": "Represents if motion is detected or not",
      "friendly": "Motion",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "detected": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "detected",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "MUTED_AUDIO": Object {
      "description": "Whether the audio is muted or not",
      "friendly": "Muted",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "muted": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "muted",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "NAME": Object {
      "description": "The current name of the device",
      "friendly": "Name",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "name": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "NEXT_AUDIO_TRACK": Object {
      "description": "Fired when changing to the next audio track",
      "friendly": "Next audio track",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "next": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "next",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "ON": Object {
      "description": "Whether the device is on or not",
      "friendly": "On",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "on": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "on",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "PREVIOUS_AUDIO_TRACK": Object {
      "description": "Fired when changing to the previous audio track",
      "friendly": "Previous audio track",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "previous": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "previous",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "PULSE_LIGHT_EFFECT": Object {
      "description": "Whether the light is running a pulse effect or not",
      "friendly": "Pulse effect",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "pulseEffect": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "pulseEffect",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "QUEUE_FLUSHED": Object {
      "description": "Fired when the queue has been emptied",
      "friendly": "Queue flushed",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "queueFlushed": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "queueFlushed",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "SEEK": Object {
      "description": "Represents the current position",
      "friendly": "Current position",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "position": Object {
            "minimum": 0,
            "type": "integer",
          },
        },
        "required": Array [
          "position",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "TAMPER": Object {
      "description": "If the device is being tampered with or not",
      "friendly": "Tamper",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "detected": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "detected",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "TEMPERATURE": Object {
      "description": "The current temperature in degrees celcius",
      "friendly": "Temperature",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "level": Object {
            "maxiumum": 100,
            "minimum": -50,
            "type": "double",
          },
        },
        "required": Array [
          "level",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "UV": Object {
      "description": "The current UV level",
      "friendly": "UV level",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "level": Object {
            "maxiumum": 15,
            "minimum": 0,
            "type": "double",
          },
        },
        "required": Array [
          "level",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "VIBRATION": Object {
      "description": "The current vibration level",
      "friendly": "Vibration level",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "level": Object {
            "maxiumum": 100,
            "minimum": 0,
            "type": "double",
          },
        },
        "required": Array [
          "level",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "VOLUME": Object {
      "description": "The current volume level",
      "friendly": "Volume level",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "volume": Object {
            "maxiumum": 100,
            "minimum": 0,
            "type": "integer",
          },
        },
        "required": Array [
          "volume",
        ],
        "type": "object",
      },
      "type": [Function],
    },
    "audioPlayMode": Object {
      "description": "The current play mode of the audio device (normal, shuffle, repeat etc)",
      "friendly": "Play mode",
      "responseSchema": Object {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": Object {
          "playMode": Object {
            "enum": Array [
              "normal",
              "repeat_all",
              "shuffle",
              "shuffle_norepeat",
            ],
            "type": "string",
          },
        },
        "required": Array [
          "playMode",
        ],
        "type": "object",
      },
      "type": [Function],
    },
  },
  "light": Object {
    "model": undefined,
    "schema": Object {
      "_id": false,
      "additionalInfo": Object {
        "default": Object {},
        "required": false,
        "type": [Function],
      },
      "commands": Object {
        "breatheEffect": Object {
          "description": "Performs a breathe effect by fading between colours",
          "friendly": "Breathe effect",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "colour": Object {
                "properties": Object {
                  "brightness": Object {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "double",
                  },
                  "hue": Object {
                    "maximum": 360,
                    "minimum": 0,
                    "type": "integer",
                  },
                  "saturation": Object {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "double",
                  },
                },
                "required": Array [
                  "hue",
                  "saturation",
                  "brightness",
                ],
                "type": "object",
              },
              "cycles": Object {
                "duration": "double",
                "maximum": 99999,
                "minimum": 0.01,
              },
              "fromColour": Object {
                "properties": Object {
                  "brightness": Object {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "double",
                  },
                  "hue": Object {
                    "maximum": 360,
                    "minimum": 0,
                    "type": "integer",
                  },
                  "saturation": Object {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "double",
                  },
                },
                "required": Array [
                  "hue",
                  "saturation",
                  "brightness",
                ],
                "type": "object",
              },
              "peak": Object {
                "maximum": 1,
                "minimum": 0,
                "type": "double",
              },
              "period": Object {
                "maximum": 100,
                "minimum": 0.01,
                "type": "double",
              },
              "persist": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "colour",
              "period",
              "cycles",
              "persist",
              "peak",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "pulseEffect": Object {
          "description": "Performs a pulse effect by flashing between colours",
          "friendly": "Pulse effect",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "colour": Object {
                "properties": Object {
                  "brightness": Object {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "double",
                  },
                  "hue": Object {
                    "maximum": 360,
                    "minimum": 0,
                    "type": "integer",
                  },
                  "saturation": Object {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "double",
                  },
                },
                "required": Array [
                  "hue",
                  "saturation",
                  "brightness",
                ],
                "type": "object",
              },
              "cycles": Object {
                "duration": "double",
                "maximum": 99999,
                "minimum": 0.01,
              },
              "fromColour": Object {
                "properties": Object {
                  "brightness": Object {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "double",
                  },
                  "hue": Object {
                    "maximum": 360,
                    "minimum": 0,
                    "type": "integer",
                  },
                  "saturation": Object {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "double",
                  },
                },
                "required": Array [
                  "hue",
                  "saturation",
                  "brightness",
                ],
                "type": "object",
              },
              "period": Object {
                "maximum": 100,
                "minimum": 0.01,
                "type": "double",
              },
              "persist": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "colour",
              "period",
              "cycles",
              "persist",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "setBooleanState": Object {
          "description": "Turns the light on or off",
          "friendly": "Turn on or off",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "duration": Object {
                "maximum": 99999,
                "minimum": 0,
                "type": "integer",
              },
              "on": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "on",
              "duration",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "setBrightnessState": Object {
          "description": "Sets the brightness of the light",
          "friendly": "Set the brightness",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "colour": Object {
                "properties": Object {
                  "brightness": Object {
                    "maximum": 1,
                    "minimum": 0.01,
                    "type": "double",
                  },
                },
                "required": Array [
                  "brightness",
                ],
                "type": "object",
              },
              "duration": Object {
                "maximum": 99999,
                "minimum": 0,
                "type": "integer",
              },
            },
            "required": Array [
              "colour",
              "duration",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "setHSBState": Object {
          "description": "Sets the hue, saturation and brightness, allowing you to change the colour of the light",
          "friendly": "Set colour and brightness",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "colour": Object {
                "properties": Object {
                  "brightness": Object {
                    "maximum": 1,
                    "minimum": 0.01,
                    "type": "double",
                  },
                  "hue": Object {
                    "maximum": 360,
                    "minimum": 0,
                    "type": "integer",
                  },
                  "saturation": Object {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "double",
                  },
                },
                "required": Array [
                  "hue",
                  "saturation",
                  "brightness",
                ],
                "type": "object",
              },
              "duration": Object {
                "maximum": 99999,
                "minimum": 0,
                "type": "integer",
              },
            },
            "required": Array [
              "colour",
              "duration",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "toggle": Object {
          "description": "Toggles the light on and off",
          "friendly": "Toggle",
          "type": [Function],
        },
      },
      "events": Object {
        "BREATHE_LIGHT_EFFECT": Object {
          "description": "Whether the light is running a breathe effect or not",
          "friendly": "Breathe effect",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "breatheEffect": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "breatheEffect",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "LIGHT_STATE": Object {
          "description": "The current state of the light (hue, saturation, brightness etc)",
          "friendly": "Light state",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "colour": Object {
                "properties": Object {
                  "brightness": Object {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "double",
                  },
                  "hue": Object {
                    "maxiumum": 360,
                    "minimum": 0,
                    "type": "integer",
                  },
                  "saturation": Object {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "double",
                  },
                },
                "type": "object",
              },
              "on": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "colour",
              "on",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "NAME": Object {
          "description": "The current name of the device",
          "friendly": "Name",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "name": Object {
                "type": "string",
              },
            },
            "required": Array [
              "name",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "PULSE_LIGHT_EFFECT": Object {
          "description": "Whether the light is running a pulse effect or not",
          "friendly": "Pulse effect",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "pulseEffect": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "pulseEffect",
            ],
            "type": "object",
          },
          "type": [Function],
        },
      },
      "name": Object {
        "required": true,
        "type": [Function],
      },
      "originalId": Object {
        "required": true,
        "type": [Function],
      },
    },
  },
  "sensor": Object {
    "model": undefined,
    "schema": Object {
      "_id": false,
      "additionalInfo": Object {
        "default": Object {},
        "required": false,
        "type": [Function],
      },
      "commands": Object {},
      "events": Object {
        "BATTERY_LEVEL": Object {
          "description": "The current battery level of the device",
          "friendly": "Battery level",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "level": Object {
                "maxiumum": 100,
                "minimum": 0,
                "type": "double",
              },
            },
            "required": Array [
              "level",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "CONTACT": Object {
          "description": "Whether the contact sensor is closed or open",
          "friendly": "Contact",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "contact": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "contact",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "HUMIDITY": Object {
          "description": "The current humidity level",
          "friendly": "Humidity",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "level": Object {
                "maxiumum": 100,
                "minimum": 0,
                "type": "double",
              },
            },
            "required": Array [
              "level",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "LIGHT": Object {
          "description": "The current light level in lux",
          "friendly": "Light level",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "level": Object {
                "maxiumum": 30000,
                "minimum": 0,
                "type": "double",
              },
            },
            "required": Array [
              "level",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "MOTION": Object {
          "description": "Represents if motion is detected or not",
          "friendly": "Motion",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "detected": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "detected",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "NAME": Object {
          "description": "The current name of the device",
          "friendly": "Name",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "name": Object {
                "type": "string",
              },
            },
            "required": Array [
              "name",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "TAMPER": Object {
          "description": "If the device is being tampered with or not",
          "friendly": "Tamper",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "detected": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "detected",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "TEMPERATURE": Object {
          "description": "The current temperature in degrees celcius",
          "friendly": "Temperature",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "level": Object {
                "maxiumum": 100,
                "minimum": -50,
                "type": "double",
              },
            },
            "required": Array [
              "level",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "UV": Object {
          "description": "The current UV level",
          "friendly": "UV level",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "level": Object {
                "maxiumum": 15,
                "minimum": 0,
                "type": "double",
              },
            },
            "required": Array [
              "level",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "VIBRATION": Object {
          "description": "The current vibration level",
          "friendly": "Vibration level",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "level": Object {
                "maxiumum": 100,
                "minimum": 0,
                "type": "double",
              },
            },
            "required": Array [
              "level",
            ],
            "type": "object",
          },
          "type": [Function],
        },
      },
      "name": Object {
        "required": true,
        "type": [Function],
      },
      "originalId": Object {
        "required": true,
        "type": [Function],
      },
    },
  },
  "socket": Object {
    "model": undefined,
    "schema": Object {
      "_id": false,
      "additionalInfo": Object {
        "default": Object {},
        "required": false,
        "type": [Function],
      },
      "commands": Object {
        "off": Object {
          "description": "Turns the socket off",
          "friendly": "Turn off",
          "type": [Function],
        },
        "on": Object {
          "description": "Turns the socket on",
          "friendly": "Turn on",
          "type": [Function],
        },
      },
      "events": Object {
        "ENERGY": Object {
          "description": "The current energy level in watts",
          "friendly": "Energy",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "energy": Object {
                "type": "double",
              },
            },
            "required": Array [
              "energy",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "NAME": Object {
          "description": "The current name of the device",
          "friendly": "Name",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "name": Object {
                "type": "string",
              },
            },
            "required": Array [
              "name",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "ON": Object {
          "description": "Whether the device is on or not",
          "friendly": "On",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "on": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "on",
            ],
            "type": "object",
          },
          "type": [Function],
        },
      },
      "name": Object {
        "required": true,
        "type": [Function],
      },
      "originalId": Object {
        "required": true,
        "type": [Function],
      },
    },
  },
  "speaker": Object {
    "model": undefined,
    "schema": Object {
      "_id": false,
      "additionalInfo": Object {
        "default": Object {},
        "required": false,
        "type": [Function],
      },
      "commands": Object {
        "addSpotifyToQueueBottom": Object {
          "description": "Adds a spotify track to the bottom of the queue",
          "friendly": "Add spotify track to bottom of queue",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "uri": Object {
                "type": "string",
              },
            },
            "required": Array [
              "uri",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "addSpotifyToQueueNext": Object {
          "description": "Adds spotify track to the top of the queue so that it plays next",
          "friendly": "Add spotify track to top of queue",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "uri": Object {
                "type": "string",
              },
            },
            "required": Array [
              "uri",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "addUrlToQueueBottom": Object {
          "description": "Adds audio to the bottom of the queue",
          "friendly": "Add track to bottom of queue",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "uri": Object {
                "type": "string",
              },
            },
            "required": Array [
              "uri",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "addUrlToQueueNext": Object {
          "description": "Adds audio to the top of the queue so that it plays next",
          "friendly": "Add track to top of queue",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "uri": Object {
                "type": "string",
              },
            },
            "required": Array [
              "uri",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "flushQueue": Object {
          "description": "Empties the queue on the speaker",
          "friendly": "Flush the queue",
          "type": [Function],
        },
        "getCurrentTrack": Object {
          "description": "Gets the current track from the speaker",
          "friendly": "Get current track",
          "type": [Function],
        },
        "getLEDState": Object {
          "description": "Gets the state of the LED on the speaker",
          "friendly": "Get the LED state",
          "type": [Function],
        },
        "getMuted": Object {
          "description": "Gets whether the speaker is muted or not",
          "friendly": "Get muted",
          "type": [Function],
        },
        "getVolume": Object {
          "description": "Gets the volume level of the speaker",
          "friendly": "Get volume",
          "type": [Function],
        },
        "next": Object {
          "description": "Plays the next track in the queue",
          "friendly": "Play next track",
          "type": [Function],
        },
        "pause": Object {
          "description": "Pauses the currently playing audio",
          "friendly": "Pause audio",
          "type": [Function],
        },
        "play": Object {
          "description": "Plays the current audio",
          "friendly": "Play audio",
          "type": [Function],
        },
        "previous": Object {
          "description": "Plays the previous track in the queue",
          "friendly": "Play previous track",
          "type": [Function],
        },
        "seek": Object {
          "description": "Seeks to the specified position within the current audio",
          "friendly": "Jump to position within track",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "position": Object {
                "minimum": 0,
                "type": "integer",
              },
            },
            "required": Array [
              "position",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "setLEDState": Object {
          "description": "Sets the state of the LED on the speaker",
          "friendly": "Turn LED on",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "on": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "on",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "setMuted": Object {
          "description": "Sets whether the speaker is muted or not",
          "friendly": "Mute",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "muted": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "muted",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "setName": Object {
          "description": "Sets the name of the speaker",
          "friendly": "Set the name of the speaker",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "name": Object {
                "type": "string",
              },
            },
            "required": Array [
              "name",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "setPlayMode": Object {
          "description": "Sets the play mode of the speaker",
          "friendly": "Set play mode",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "playMode": Object {
                "enum": Array [
                  "normal",
                  "repeat_all",
                  "shuffle",
                  "shuffle_norepeat",
                ],
                "type": "string",
              },
            },
            "required": Array [
              "playMode",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "setVolume": Object {
          "description": "Sets the volume of the speaker",
          "friendly": "Set volume",
          "requestSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "volume": Object {
                "maximum": 100,
                "minimum": 0,
                "type": "integer",
              },
            },
            "required": Array [
              "volume",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "stop": Object {
          "description": "Stops the currently playing audio",
          "friendly": "Stop the audio",
          "type": [Function],
        },
      },
      "events": Object {
        "ADDED_TO_QUEUE_BOTTOM": Object {
          "description": "Fired when an item is added to the bottom of the queue",
          "friendly": "Added to bottom of queue",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "uri": Object {
                "type": "string",
              },
            },
            "required": Array [
              "queued",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "ADDED_TO_QUEUE_NEXT": Object {
          "description": "Fired when an item is added to the top of the queue",
          "friendly": "Added to top of queue",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "uri": Object {
                "type": "string",
              },
            },
            "required": Array [
              "queued",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "AUDIO_PLAYING_STATE": Object {
          "description": "Represents the current playing state (playing, paused, stopped)",
          "friendly": "Playing state",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "paused": Object {
                "paused": "boolean",
              },
              "playing": Object {
                "paused": "boolean",
              },
              "stopped": Object {
                "paused": "boolean",
              },
            },
            "required": Array [
              "paused",
              "playing",
              "stopped",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "CURRENT_AUDIO_TRACK": Object {
          "description": "Information about the current audio",
          "friendly": "Current track",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "album": Object {
                "type": "string",
              },
              "artUrl": Object {
                "type": "string",
              },
              "artist": Object {
                "type": "string",
              },
              "currentPosition": Object {
                "type": "integer",
              },
              "length": Object {
                "type": "integer",
              },
              "track": Object {
                "type": "string",
              },
            },
            "required": Array [
              "artist",
              "track",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "LED_STATE": Object {
          "description": "The current state of the LED",
          "friendly": "LED",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "on": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "on",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "MUTED_AUDIO": Object {
          "description": "Whether the audio is muted or not",
          "friendly": "Muted",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "muted": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "muted",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "NAME": Object {
          "description": "The current name of the device",
          "friendly": "Name",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "name": Object {
                "type": "string",
              },
            },
            "required": Array [
              "name",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "NEXT_AUDIO_TRACK": Object {
          "description": "Fired when changing to the next audio track",
          "friendly": "Next audio track",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "next": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "next",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "PREVIOUS_AUDIO_TRACK": Object {
          "description": "Fired when changing to the previous audio track",
          "friendly": "Previous audio track",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "previous": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "previous",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "QUEUE_FLUSHED": Object {
          "description": "Fired when the queue has been emptied",
          "friendly": "Queue flushed",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "queueFlushed": Object {
                "type": "boolean",
              },
            },
            "required": Array [
              "queueFlushed",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "SEEK": Object {
          "description": "Represents the current position",
          "friendly": "Current position",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "position": Object {
                "minimum": 0,
                "type": "integer",
              },
            },
            "required": Array [
              "position",
            ],
            "type": "object",
          },
          "type": [Function],
        },
        "VOLUME": Object {
          "description": "The current volume level",
          "friendly": "Volume level",
          "responseSchema": Object {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": Object {
              "volume": Object {
                "maxiumum": 100,
                "minimum": 0,
                "type": "integer",
              },
            },
            "required": Array [
              "volume",
            ],
            "type": "object",
          },
          "type": [Function],
        },
      },
      "name": Object {
        "required": true,
        "type": [Function],
      },
      "originalId": Object {
        "required": true,
        "type": [Function],
      },
    },
  },
}
`;
