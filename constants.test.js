const constants = require('./constants');

describe('Constants', () => {
  it('should export all the constants', () => {
    expect(constants).toEqual({
      DEVICE_EVENT: 'DEVICE:EVENT',
      DEVICE_LIGHT_EVENT: 'DEVICE_LIGHT:EVENT',
      DEVICE_SENSOR_EVENT: 'DEVICE_SENSOR:EVENT',
      DEVICE_SOCKET_EVENT: 'DEVICE_SOCKET:EVENT',
      DEVICE_SPEAKER_EVENT: 'DEVICE_SPEAKER:EVENT',
      events: {
        LIGHT_STATE: 'LIGHT_STATE',
        BREATHE_LIGHT_EFFECT: 'BREATHE_LIGHT_EFFECT',
        PULSE_LIGHT_EFFECT: 'PULSE_LIGHT_EFFECT',
        ON: 'ON',
        ENERGY: 'ENERGY',
        CONTACT: 'CONTACT',
        TEMPERATURE: 'TEMPERATURE',
        HUMIDITY: 'HUMIDITY',
        LIGHT: 'LIGHT',
        UV: 'UV',
        VIBRATION: 'VIBRATION',
        BATTERY_LEVEL: 'BATTERY_LEVEL',
        MOTION: 'MOTION',
        AUDIO_PLAYING_STATE: 'AUDIO_PLAYING_STATE',
        PREVIOUS_AUDIO_TRACK: 'PREVIOUS_AUDIO_TRACK',
        NEXT_AUDIO_TRACK: 'NEXT_AUDIO_TRACK',
        MUTED_AUDIO: 'MUTED_AUDIO',
        QUEUE_FLUSHED: 'QUEUE_FLUSHED',
        VOLUME: 'VOLUME',
        SEEK: 'SEEK',
        NAME: 'NAME',
        LED_STATE: 'LED_STATE',
        CURRENT_AUDIO_TRACK: 'CURRENT_AUDIO_TRACK',
        ADDED_TO_QUEUE_NEXT: 'ADDED_TO_QUEUE_NEXT',
        ADDED_TO_QUEUE_BOTTOM: 'ADDED_TO_QUEUE_BOTTOM',
        TAMPER: 'TAMPER',
      },
      light: {
        LIGHT_STATE: 'LIGHT_STATE',
        BREATHE_LIGHT_EFFECT: 'BREATHE_LIGHT_EFFECT',
        PULSE_LIGHT_EFFECT: 'PULSE_LIGHT_EFFECT',
        NAME: 'NAME',
      },
      socket: {
        ON: 'ON',
        ENERGY: 'ENERGY',
        NAME: 'NAME',
      },
      sensor: {
        CONTACT: 'CONTACT',
        TEMPERATURE: 'TEMPERATURE',
        HUMIDITY: 'HUMIDITY',
        LIGHT: 'LIGHT',
        UV: 'UV',
        BATTERY_LEVEL: 'BATTERY_LEVEL',
        MOTION: 'MOTION',
        NAME: 'NAME',
        VIBRATION: 'VIBRATION',
        TAMPER: 'TAMPER',
      },
      speaker: {
        AUDIO_PLAYING_STATE: 'AUDIO_PLAYING_STATE',
        PREVIOUS_AUDIO_TRACK: 'PREVIOUS_AUDIO_TRACK',
        NEXT_AUDIO_TRACK: 'NEXT_AUDIO_TRACK',
        MUTED_AUDIO: 'MUTED_AUDIO',
        QUEUE_FLUSHED: 'QUEUE_FLUSHED',
        VOLUME: 'VOLUME',
        SEEK: 'SEEK',
        NAME: 'NAME',
        LED_STATE: 'LED_STATE',
        CURRENT_AUDIO_TRACK: 'CURRENT_AUDIO_TRACK',
        ADDED_TO_QUEUE_NEXT: 'ADDED_TO_QUEUE_NEXT',
        ADDED_TO_QUEUE_BOTTOM: 'ADDED_TO_QUEUE_BOTTOM',
      },
    });
  });
});
